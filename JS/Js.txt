*********** Tipos de dados *********************

STRINGS podem ser utilizadas de três maneiras.

console.log(" ") quando por algum motivo dentro do texto precisar usar aspas simples 
exemplo: console.log(" 'verde' ou  'azul' ").

console.log(' ') quando por algum motivo dentro do texto precisar usar aspas duplas 
exemplo: console.log(' "verde" ou  "azul" ').

console.log(``) grase permite multiplas linhas permite expressão de linguagem.
exemplo: console.log(`ygor ${1 + 1}`) + resultado será -> ygor 2 

number 

33 inteiro
33,3 real ou float 
NoN not a number 
Infinity /  infinito.

boolean 

Verdadeiro ou falso.

Null ou undefined

Null
Objeto que não possui valor atribuído

Undefined
quando por algum motivo dentro do texto precisar usar aspas simples 
exemplo: console.log(" 'verde' ou  azul").

Object
    * Probiedades / atributos
    * Funcionalidades / Métodos

console.log({
    name: "Ygor",
    idade: 36,
    andar: function(){
        console.log('andar')
    }
})

Array (vetores)
uma lista
Agrupameno de dados

console.log([
    "Leite",
    "Ovos",
    2,
    3
    ])

******************* Aula variaveis***********

três tipos 

var   sofre alterações
Let   sofre alterações  
const // não muda seu valor durante operação.

*********** Scope ******************

Bloco statement{
    qualquer código.
}

****Var é uma variável global e pode ser referenciada em qualquer lugar do código
diferente do let e const. 

histing do conceito elevação joga toda variável para cima
e a define como undedined. 

*** Let funciona somente no scopo local
 e só pode ser utulizado depois da declaração
só funciona dentro do scopo.

Em Js para concatenar valores parta apenas separar
por '' e o simbolo de  +

exemplo:
Var nome ="Ygor"
let Age = 28
isHuman = true

console.log('O '+ name +' tem'+ age +'anos')
segunda forma de concatenação utilizando ``
console.log (O ${name} tem ${age} anos)


Declaração de um Objeto ***

const person ={
    name: 'Ygor'
    age: 30,
    wieght:118,
    isAdmin = true
}


